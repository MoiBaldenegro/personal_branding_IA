---
import Layout from "../layouts/Layout.astro";
import { t } from "i18next";
import { Trans } from "astro-i18next/components";
import FeatureCard from "../components/FeatureCard.astro";
import Testimonial from "../components/Testimonial.astro";
import UserResultsCarousel from "../components/UserResultsCarousel.astro";
import { CldUploadWidget } from "astro-cloudinary";
import { getCldImageUrl } from "astro-cloudinary/helpers";
import { transformerModel } from "../utils/transformer/transformerModel";
import Header from "../components/Header.astro";
import Hero from "../components/Hero.astro";
import UploadWidget from "../components/UploadWidget.astro";
import Features from "../components/Features.astro";
import Testimonials from "../components/Testimonials.astro";
---

<Layout title="SocialPicAI">
  <main class="container mx-auto md:px-4 md:py-8">
    <Hero />
    <UploadWidget />
    <div
      id="results"
      class="mt-8 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4"
    >
      <!-- Los resultados se mostrarán aquí -->
    </div>
    <button id="download-button-index">Download SuperSet</button>
    <UserResultsCarousel />
    <Features />
    <Testimonials />
  </main>
</Layout>
<script>
  import { navigate } from "astro:transitions/client";
  import { transformerModel } from "../utils/transformer/transformerModel";
  import { getCldImageUrl } from "astro-cloudinary/helpers";
  import { facebookPreview } from "../templates/preview";
  import { PreviewsOptions } from "../types/previews.types";
  import { descargarZip } from "../utils/dowloader/downloader";
  const ImagenDePrueba = transformerModel("https://www.google.com");
  const widget = document.getElementById("local-widget");
  let downloads: [] = [];

  if (widget) {
    widget.addEventListener("clduploadwidget:success", ((
      e: CustomEvent<{ info: { public_id: string } }>
    ) => {
      const public_id = e.detail.info.public_id;
      //navigate(`/previews?id=${public_id}`);
      const urlFacebook = getCldImageUrl({
        src: public_id,
        replaceBackground: "un fondo terrorífico con alusión a halloween",
        crop: {
          height: 720,
          width: 720,
          source: true,
          type: "fill",
          gravity: "face",
        },
      });
      const urlFacebookBio = getCldImageUrl({
        src: public_id,
        replaceBackground: "un fondo terrorífico con alusión a halloween",
        crop: {
          height: 312,
          width: 820,
          source: true,
          type: "fill",
          gravity: "face",
        },
      });
      const resultsContainer = document.getElementById("results");
      resultsContainer.innerHTML = "";
      const socialNetworks = [
        {
          name: PreviewsOptions.FACEBOOK_PROFILE,
          url: urlFacebook,
          title: "Facebook profile: 720 x 720px",
        },
        {
          name: PreviewsOptions.FACEBOOK_BIO,
          url: urlFacebookBio,
          title: "Facebook bio: 820 x 312px",
        },
      ];

      socialNetworks.forEach((network) => {
        downloads.push(network);
        const card = document.createElement("div");
        card.className = "bg-white dark:bg-gray-800 rounded-lg shadow-md p-4";
        card.innerHTML = facebookPreview(
          network.url,
          network.name,
          network.title
        );

        // Agregar el evento de descarga al botón creado
        const button = card.querySelector("button");
        button.addEventListener("click", () => {
          const downloadLink = document.createElement("a");
          downloadLink.href = urlFacebook;
          downloadLink.download = `${network}.png`;
          downloadLink.click();
        });
        resultsContainer.appendChild(card);
      });
    }) as EventListener);
  }
  document.getElementById("imageForm").addEventListener("submit", async (e) => {
    e.preventDefault();
    const form = e.target as HTMLFormElement;
    const formData = new FormData(form);
    const image = formData.get("userImage");

    if (image) {
      // Simulamos el procesamiento de la imagen
      await new Promise((resolve) => setTimeout(resolve, 2000));

      //const socialNetworks = [Previews.INSTAGRAM];

      const resultsContainer = document.getElementById("results");
      resultsContainer.innerHTML = "";

      const imageUrl = URL.createObjectURL(image);

      socialNetworks.forEach((network) => {
        const card = document.createElement("div");
        card.className = "bg-white dark:bg-gray-800 rounded-lg shadow-md p-4";
        // const htmlContent = facebookPreview(urlFacebook);
        card.innerHTML = "";

        // Agregar el evento de descarga al botón creado
        const button = card.querySelector("button");
        button.addEventListener("click", () => {
          const downloadLink = document.createElement("a");
          downloadLink.href = imageUrl;
          downloadLink.download = `${network}.png`;
          downloadLink.click();
        });
        resultsContainer.appendChild(card);
      });
    }
  });

  // descargas/////////////////////
  // Función para descargar las imágenes como ZIP

  const downloadButton = document.getElementById("download-button-index");

  if (downloadButton) {
    downloadButton.addEventListener("click", () => {
      descargarZip(downloads);
    });
  }
</script>
